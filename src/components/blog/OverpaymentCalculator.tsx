import { useState } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Label } from "@/components/ui/label";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import Icon from "@/components/ui/icon";

interface MFO {
  name: string;
  logo: string;
  rating: number;
  amount: string;
  term: string;
  rate: string;
  features: string[];
  approved: string;
  recommended: boolean;
  url: string;
}

const OverpaymentCalculator = () => {
  const [amount, setAmount] = useState<string>("10000");
  const [days, setDays] = useState<string>("20");
  const [rate, setRate] = useState<string>("1");
  const [calculated, setCalculated] = useState(false);

  const mfoList: MFO[] = [
    {
      name: "–ù–∞–¥–æ –¥–µ–Ω–µ–≥",
      logo: "üí∞",
      rating: 4.9,
      amount: "–¥–æ 30 000 ‚ÇΩ",
      term: "–¥–æ 30 –¥–Ω–µ–π",
      rate: "0%",
      features: ["–ü–µ—Ä–≤—ã–π –∑–∞–π–º 0%", "–ë–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ö–ò", "–ó–∞ 5 –º–∏–Ω—É—Ç"],
      approved: "98%",
      recommended: true,
      url: "https://trk.ppdu.ru/click/3GyRuqoD?erid=2SDnjdmoM8q&siteId=8015"
    },
    {
      name: "–£–º–Ω—ã–µ –Ω–∞–ª–∏—á–Ω—ã–µ",
      logo: "‚ö°",
      rating: 4.8,
      amount: "–¥–æ 30 000 ‚ÇΩ",
      term: "–¥–æ 30 –¥–Ω–µ–π",
      rate: "–æ—Ç 0%",
      features: ["–ë–µ–∑ –æ—Ç–∫–∞–∑–∞", "–û–Ω–ª–∞–π–Ω 24/7", "–ù–∞ –∫–∞—Ä—Ç—É"],
      approved: "96%",
      recommended: true,
      url: "https://trk.ppdu.ru/click/HbPsDylQ?erid=LjN8KKm44&siteId=8015"
    },
    {
      name: "Max.Credit",
      logo: "üéØ",
      rating: 4.7,
      amount: "–¥–æ 30 000 ‚ÇΩ",
      term: "–¥–æ 30 –¥–Ω–µ–π",
      rate: "0%",
      features: ["–° 18 –ª–µ—Ç", "–ú–≥–Ω–æ–≤–µ–Ω–Ω–æ", "–ü–µ—Ä–≤—ã–π –ø–æ–¥ 0%"],
      approved: "95%",
      recommended: false,
      url: "https://trk.ppdu.ru/click/OMRKMQnH?erid=2SDnjbuHuCz&siteId=8015"
    },
    {
      name: "–¢—É—Ä–±–æ–∑–∞–π–º",
      logo: "üöÄ",
      rating: 4.6,
      amount: "–¥–æ 100 000 ‚ÇΩ",
      term: "–¥–æ 168 –¥–Ω–µ–π",
      rate: "0%",
      features: ["–ü–µ—Ä–≤—ã–π 0%", "–ë–µ–∑ –ø—Ä–æ–≤–µ—Ä–æ–∫", "–ó–∞ 10 –º–∏–Ω—É—Ç"],
      approved: "93%",
      recommended: false,
      url: "https://trk.ppdu.ru/click/kxajeYKr?erid=LjN8K737T&siteId=8015"
    },
    {
      name: "–î–æ–ó–∞—Ä–ø–ª–∞—Ç—ã",
      logo: "üí≥",
      rating: 4.5,
      amount: "–¥–æ 100 000 ‚ÇΩ",
      term: "–¥–æ 365 –¥–Ω–µ–π",
      rate: "0%",
      features: ["–î–æ –∑–∞—Ä–ø–ª–∞—Ç—ã", "–ë–µ–∑ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤", "–ë—ã—Å—Ç—Ä–æ"],
      approved: "90%",
      recommended: false,
      url: "https://trk.ppdu.ru/click/vZa8VguM?erid=2SDnjevZFtJ&siteId=8015"
    }
  ];

  const trackClick = async (mfoName: string) => {
    try {
      await fetch('https://functions.poehali.dev/c591c6e9-075e-48d0-a487-6cfffa0136b7', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ mfo_name: mfoName }),
      });
    } catch (error) {
      console.error('Failed to track click:', error);
    }
  };

  const calculateOverpayment = () => {
    setCalculated(true);
  };

  const getSuitableMFOs = (): MFO[] => {
    const requestedAmount = parseFloat(amount);
    const requestedDays = parseFloat(days);

    return mfoList.filter(mfo => {
      const maxAmount = parseInt(mfo.amount.replace(/\D/g, ''));
      const maxDays = parseInt(mfo.term.replace(/\D/g, ''));
      
      return requestedAmount <= maxAmount && requestedDays <= maxDays;
    }).slice(0, 3);
  };

  const overpayment = parseFloat(amount) * (parseFloat(rate) / 100) * parseFloat(days);
  const totalReturn = parseFloat(amount) + overpayment;
  const yearlyRate = (parseFloat(rate) * 365).toFixed(0);
  const suitableMFOs = getSuitableMFOs();

  return (
    <div className="my-12">
      <Card className="border-2 border-primary/20 shadow-2xl">
        <CardHeader className="bg-gradient-to-r from-primary/10 to-secondary/10">
          <CardTitle className="flex items-center gap-3 text-2xl">
            <Icon name="Calculator" size={28} className="text-primary" />
            –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ø–µ—Ä–µ–ø–ª–∞—Ç—ã –ø–æ –º–∏–∫—Ä–æ–∑–∞–π–º—É
          </CardTitle>
          <p className="text-sm text-muted-foreground mt-2">
            –†–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ —Ç–æ—á–Ω—É—é —Å—É–º–º—É –ø–µ—Ä–µ–ø–ª–∞—Ç—ã –∏ –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–π–º–∞
          </p>
        </CardHeader>
        <CardContent className="p-6 md:p-8">
          <div className="grid md:grid-cols-2 gap-6 mb-8">
            <div className="space-y-6">
              <div>
                <Label htmlFor="amount" className="text-base font-semibold mb-2 block">
                  –°—É–º–º–∞ –∑–∞–π–º–∞ (‚ÇΩ)
                </Label>
                <Input
                  id="amount"
                  type="number"
                  value={amount}
                  onChange={(e) => setAmount(e.target.value)}
                  className="text-lg h-12"
                  min="1000"
                  max="100000"
                  step="1000"
                />
                <p className="text-xs text-muted-foreground mt-1">–û—Ç 1 000 –¥–æ 100 000 —Ä—É–±–ª–µ–π</p>
              </div>

              <div>
                <Label htmlFor="days" className="text-base font-semibold mb-2 block">
                  –°—Ä–æ–∫ –∑–∞–π–º–∞ (–¥–Ω–µ–π)
                </Label>
                <Input
                  id="days"
                  type="number"
                  value={days}
                  onChange={(e) => setDays(e.target.value)}
                  className="text-lg h-12"
                  min="1"
                  max="365"
                  step="1"
                />
                <p className="text-xs text-muted-foreground mt-1">–û—Ç 1 –¥–æ 365 –¥–Ω–µ–π</p>
              </div>

              <div>
                <Label htmlFor="rate" className="text-base font-semibold mb-2 block">
                  –ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞ (% –≤ –¥–µ–Ω—å)
                </Label>
                <Input
                  id="rate"
                  type="number"
                  value={rate}
                  onChange={(e) => setRate(e.target.value)}
                  className="text-lg h-12"
                  min="0.1"
                  max="5"
                  step="0.1"
                />
                <p className="text-xs text-muted-foreground mt-1">
                  –ì–æ–¥–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞: <span className="font-semibold text-primary">{yearlyRate}%</span>
                </p>
              </div>

              <Button 
                onClick={calculateOverpayment}
                size="lg"
                className="w-full text-lg h-12 gap-2"
              >
                <Icon name="Calculator" size={20} />
                –†–∞—Å—Å—á–∏—Ç–∞—Ç—å
              </Button>
            </div>

            {calculated && (
              <div className="space-y-4 animate-fade-in">
                <div className="bg-gradient-to-br from-primary/10 to-primary/5 rounded-xl p-6 border-2 border-primary/20">
                  <p className="text-sm text-muted-foreground mb-1">–ü–µ—Ä–µ–ø–ª–∞—Ç–∞</p>
                  <p className="text-3xl md:text-4xl font-bold text-primary">
                    {overpayment.toLocaleString('ru-RU')} ‚ÇΩ
                  </p>
                </div>

                <div className="bg-gradient-to-br from-secondary/10 to-secondary/5 rounded-xl p-6 border-2 border-secondary/20">
                  <p className="text-sm text-muted-foreground mb-1">–°—É–º–º–∞ –∫ –≤–æ–∑–≤—Ä–∞—Ç—É</p>
                  <p className="text-3xl md:text-4xl font-bold text-secondary">
                    {totalReturn.toLocaleString('ru-RU')} ‚ÇΩ
                  </p>
                </div>

                <div className="bg-muted rounded-xl p-6">
                  <h4 className="font-semibold mb-3 flex items-center gap-2">
                    <Icon name="Info" size={18} className="text-primary" />
                    –î–µ—Ç–∞–ª–∏ —Ä–∞—Å—á—ë—Ç–∞
                  </h4>
                  <div className="space-y-2 text-sm">
                    <div className="flex justify-between">
                      <span className="text-muted-foreground">–û—Å–Ω–æ–≤–Ω–æ–π –¥–æ–ª–≥:</span>
                      <span className="font-semibold">{parseFloat(amount).toLocaleString('ru-RU')} ‚ÇΩ</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-muted-foreground">–°—Ä–æ–∫:</span>
                      <span className="font-semibold">{days} {parseInt(days) === 1 ? '–¥–µ–Ω—å' : parseInt(days) < 5 ? '–¥–Ω—è' : '–¥–Ω–µ–π'}</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-muted-foreground">–°—Ç–∞–≤–∫–∞ –≤ –¥–µ–Ω—å:</span>
                      <span className="font-semibold">{rate}%</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-muted-foreground">–°—Ç–∞–≤–∫–∞ –≤ –≥–æ–¥:</span>
                      <span className="font-semibold">{yearlyRate}%</span>
                    </div>
                    <div className="border-t pt-2 mt-2 flex justify-between">
                      <span className="text-muted-foreground">–ü–µ—Ä–µ–ø–ª–∞—Ç–∞ –≤ %:</span>
                      <span className="font-semibold text-primary">
                        {((overpayment / parseFloat(amount)) * 100).toFixed(1)}%
                      </span>
                    </div>
                  </div>
                </div>

                <div className="bg-blue-50 border border-blue-200 rounded-xl p-4">
                  <div className="flex gap-3">
                    <Icon name="Lightbulb" size={20} className="text-blue-600 flex-shrink-0 mt-0.5" />
                    <div className="text-sm text-blue-900">
                      <p className="font-semibold mb-1">–°–æ–≤–µ—Ç:</p>
                      <p>–ü—Ä–∏ –¥–æ—Å—Ä–æ—á–Ω–æ–º –ø–æ–≥–∞—à–µ–Ω–∏–∏ –≤—ã –∑–∞–ø–ª–∞—Ç–∏—Ç–µ –ø—Ä–æ—Ü–µ–Ω—Ç—ã —Ç–æ–ª—å–∫–æ –∑–∞ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –¥–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∑–∞–π–º–æ–º. –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å!</p>
                    </div>
                  </div>
                </div>
              </div>
            )}

            {!calculated && (
              <div className="flex items-center justify-center text-center p-8">
                <div>
                  <Icon name="Calculator" size={64} className="text-muted-foreground/30 mx-auto mb-4" />
                  <p className="text-muted-foreground">
                    –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–π–º–∞<br />–∏ –Ω–∞–∂–º–∏—Ç–µ "–†–∞—Å—Å—á–∏—Ç–∞—Ç—å"
                  </p>
                </div>
              </div>
            )}
          </div>

          <div className="bg-gradient-to-r from-orange-50 to-amber-50 border border-orange-200 rounded-xl p-6 mb-8">
            <h4 className="font-semibold mb-3 flex items-center gap-2">
              <Icon name="AlertTriangle" size={18} className="text-orange-600" />
              –§–æ—Ä–º—É–ª–∞ —Ä–∞—Å—á—ë—Ç–∞
            </h4>
            <div className="bg-white rounded-lg p-4 font-mono text-sm">
              <p className="mb-2">–ü–µ—Ä–µ–ø–ª–∞—Ç–∞ = –°—É–º–º–∞ √ó (–°—Ç–∞–≤–∫–∞ / 100) √ó –î–Ω–∏</p>
              <p className="text-muted-foreground">
                –ü—Ä–∏–º–µ—Ä: {amount} √ó ({rate} / 100) √ó {days} = {overpayment.toLocaleString('ru-RU')} ‚ÇΩ
              </p>
            </div>
          </div>

          {calculated && suitableMFOs.length > 0 && (
            <div className="mt-8 animate-fade-in">
              <div className="bg-gradient-to-r from-green-50 to-emerald-50 border-2 border-green-200 rounded-xl p-6 mb-6">
                <h3 className="text-xl font-bold mb-2 flex items-center gap-2">
                  <Icon name="CheckCircle2" size={24} className="text-green-600" />
                  –ü–æ–¥—Ö–æ–¥—è—â–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –≤–∞—à–∏—Ö —É—Å–ª–æ–≤–∏–π
                </h3>
                <p className="text-sm text-muted-foreground">
                  –ú–§–û, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–¥–∞—é—Ç {parseFloat(amount).toLocaleString('ru-RU')} ‚ÇΩ –Ω–∞ {days} {parseInt(days) === 1 ? '–¥–µ–Ω—å' : parseInt(days) < 5 ? '–¥–Ω—è' : '–¥–Ω–µ–π'}
                </p>
              </div>

              <div className="grid gap-4">
                {suitableMFOs.map((mfo, index) => (
                  <Card key={index} className="overflow-hidden hover:shadow-lg transition-all duration-300 border-2">
                    <CardContent className="p-6">
                      <div className="flex items-start justify-between gap-4 mb-4">
                        <div className="flex items-center gap-3">
                          <div className="text-4xl">{mfo.logo}</div>
                          <div>
                            <h4 className="font-bold text-lg">{mfo.name}</h4>
                            <div className="flex items-center gap-2 mt-1">
                              <div className="flex items-center gap-1">
                                <Icon name="Star" size={16} className="fill-yellow-400 text-yellow-400" />
                                <span className="font-semibold text-sm">{mfo.rating}</span>
                              </div>
                              <Badge variant="secondary" className="text-xs">
                                –û–¥–æ–±—Ä–µ–Ω–∏–µ {mfo.approved}
                              </Badge>
                            </div>
                          </div>
                        </div>
                        {mfo.recommended && (
                          <Badge className="bg-gradient-to-r from-primary to-secondary text-white">
                            –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º
                          </Badge>
                        )}
                      </div>

                      <div className="grid grid-cols-3 gap-4 mb-4 text-sm">
                        <div>
                          <p className="text-muted-foreground mb-1">–°—É–º–º–∞</p>
                          <p className="font-bold">{mfo.amount}</p>
                        </div>
                        <div>
                          <p className="text-muted-foreground mb-1">–°—Ä–æ–∫</p>
                          <p className="font-bold">{mfo.term}</p>
                        </div>
                        <div>
                          <p className="text-muted-foreground mb-1">–°—Ç–∞–≤–∫–∞</p>
                          <p className="font-bold text-green-600">{mfo.rate}</p>
                        </div>
                      </div>

                      <div className="flex flex-wrap gap-2 mb-4">
                        {mfo.features.map((feature, idx) => (
                          <Badge key={idx} variant="outline" className="text-xs">
                            {feature}
                          </Badge>
                        ))}
                      </div>

                      <Button 
                        className="w-full gap-2" 
                        size="lg"
                        onClick={() => {
                          trackClick(mfo.name);
                          window.open(mfo.url, '_blank');
                        }}
                      >
                        –ü–æ–ª—É—á–∏—Ç—å –∑–∞–π–º
                        <Icon name="ExternalLink" size={18} />
                      </Button>
                    </CardContent>
                  </Card>
                ))}
              </div>

              <div className="mt-6 text-center">
                <Button 
                  variant="outline" 
                  size="lg"
                  onClick={() => {
                    const mfoSection = document.getElementById('mfo-list');
                    if (mfoSection) {
                      mfoSection.scrollIntoView({ behavior: 'smooth' });
                    } else {
                      window.location.href = '/#mfo-list';
                    }
                  }}
                  className="gap-2"
                >
                  –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
                  <Icon name="ArrowRight" size={18} />
                </Button>
              </div>
            </div>
          )}

          {calculated && suitableMFOs.length === 0 && (
            <div className="mt-8 bg-amber-50 border border-amber-200 rounded-xl p-6 text-center">
              <Icon name="AlertCircle" size={48} className="text-amber-600 mx-auto mb-3" />
              <h4 className="font-bold mb-2">–ù–µ –Ω–∞—à–ª–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π</h4>
              <p className="text-sm text-muted-foreground mb-4">
                –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–π–º–∞ –∏–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ú–§–û
              </p>
              <Button 
                onClick={() => window.location.href = '/#mfo-list'}
                className="gap-2"
              >
                –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –ú–§–û
                <Icon name="ArrowRight" size={18} />
              </Button>
            </div>
          )}
        </CardContent>
      </Card>
    </div>
  );
};

export default OverpaymentCalculator;