import { useState } from "react";
import { Card } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import Icon from "@/components/ui/icon";

interface QuizResult {
  mfo: string;
  logo: string;
  reason: string;
  amount: string;
  term: string;
  rate: string;
  url: string;
}

const LoanQuiz = () => {
  const [step, setStep] = useState(0);
  const [answers, setAnswers] = useState<Record<string, string>>({});
  const [result, setResult] = useState<QuizResult | null>(null);

  const questions = [
    {
      id: "amount",
      question: "–ö–∞–∫–∞—è —Å—É–º–º–∞ –≤–∞–º –Ω—É–∂–Ω–∞?",
      icon: "Wallet",
      options: [
        { value: "small", label: "–î–æ 30 000 ‚ÇΩ", icon: "üí∞" },
        { value: "medium", label: "30 000 - 50 000 ‚ÇΩ", icon: "üíµ" },
        { value: "large", label: "50 000 - 100 000 ‚ÇΩ", icon: "üí∏" }
      ]
    },
    {
      id: "term",
      question: "–ù–∞ –∫–∞–∫–æ–π —Å—Ä–æ–∫ –Ω—É–∂–Ω—ã –¥–µ–Ω—å–≥–∏?",
      icon: "Calendar",
      options: [
        { value: "short", label: "–î–æ 30 –¥–Ω–µ–π", icon: "‚è±Ô∏è" },
        { value: "medium", label: "1-3 –º–µ—Å—è—Ü–∞", icon: "üìÖ" },
        { value: "long", label: "3-6 –º–µ—Å—è—Ü–µ–≤", icon: "üóìÔ∏è" }
      ]
    },
    {
      id: "history",
      question: "–ö–∞–∫–∞—è —É –≤–∞—Å –∫—Ä–µ–¥–∏—Ç–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è?",
      icon: "FileText",
      options: [
        { value: "good", label: "–•–æ—Ä–æ—à–∞—è, –±–µ–∑ –ø—Ä–æ—Å—Ä–æ—á–µ–∫", icon: "‚úÖ" },
        { value: "bad", label: "–ë—ã–ª–∏ –ø—Ä–æ—Å—Ä–æ—á–∫–∏", icon: "‚ö†Ô∏è" },
        { value: "none", label: "–ë–µ—Ä—É –∑–∞–π–º –≤–ø–µ—Ä–≤—ã–µ", icon: "üÜï" }
      ]
    },
    {
      id: "speed",
      question: "–ö–∞–∫ —Å—Ä–æ—á–Ω–æ –Ω—É–∂–Ω—ã –¥–µ–Ω—å–≥–∏?",
      icon: "Zap",
      options: [
        { value: "urgent", label: "–ü—Ä—è–º–æ —Å–µ–π—á–∞—Å", icon: "üöÄ" },
        { value: "today", label: "–í —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è", icon: "‚è∞" },
        { value: "soon", label: "–í –±–ª–∏–∂–∞–π—à–∏–µ –¥–Ω–∏", icon: "üìÜ" }
      ]
    }
  ];

  const getMFORecommendation = (): QuizResult => {
    const { amount, term, history, speed } = answers;

    if (amount === "small" && term === "short") {
      return {
        mfo: "–ù–∞–¥–æ –¥–µ–Ω–µ–≥",
        logo: "üí∞",
        reason: "–ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –Ω–µ–±–æ–ª—å—à–∏—Ö –∑–∞–π–º–æ–≤ –Ω–∞ –∫–æ—Ä–æ—Ç–∫–∏–π —Å—Ä–æ–∫. –ü–µ—Ä–≤—ã–π –∑–∞–π–º –ø–æ–¥ 0%!",
        amount: "–¥–æ 30 000 ‚ÇΩ",
        term: "–¥–æ 30 –¥–Ω–µ–π",
        rate: "0%",
        url: "https://trk.ppdu.ru/click/3GyRuqoD?erid=2SDnjdmoM8q&siteId=8015"
      };
    }

    if (amount === "large" || term === "long") {
      return {
        mfo: "–î–æ–ó–∞—Ä–ø–ª–∞—Ç—ã",
        logo: "üí≥",
        reason: "–õ—É—á—à–∏–π –≤—ã–±–æ—Ä –¥–ª—è –±–æ–ª—å—à–∏—Ö —Å—É–º–º –Ω–∞ –¥–ª–∏—Ç–µ–ª—å–Ω—ã–π —Å—Ä–æ–∫ –¥–æ –≥–æ–¥–∞!",
        amount: "–¥–æ 100 000 ‚ÇΩ",
        term: "–¥–æ 365 –¥–Ω–µ–π",
        rate: "0%",
        url: "https://trk.ppdu.ru/click/vZa8VguM?erid=2SDnjevZFtJ&siteId=8015"
      };
    }

    if (history === "bad") {
      return {
        mfo: "–í–µ–±-–ó–∞–π–º",
        logo: "üåê",
        reason: "–û–¥–æ–±—Ä—è—é—Ç –¥–∞–∂–µ —Å –ø–ª–æ—Ö–æ–π –ö–ò. –ë—ã—Å—Ç—Ä–æ–µ —Ä–µ—à–µ–Ω–∏–µ –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–æ–∫!",
        amount: "–¥–æ 30 000 ‚ÇΩ",
        term: "–¥–æ 30 –¥–Ω–µ–π",
        rate: "–æ—Ç 0%",
        url: "https://trk.ppdu.ru/click/cOBWm2j7?erid=2SDnjc5cRY8&siteId=8015"
      };
    }

    if (speed === "urgent") {
      return {
        mfo: "–£–º–Ω—ã–µ –Ω–∞–ª–∏—á–Ω—ã–µ",
        logo: "‚ö°",
        reason: "–°–∞–º–æ–µ –±—ã—Å—Ç—Ä–æ–µ –æ–¥–æ–±—Ä–µ–Ω–∏–µ! –î–µ–Ω—å–≥–∏ –Ω–∞ –∫–∞—Ä—Ç–µ –∑–∞ 5 –º–∏–Ω—É—Ç!",
        amount: "–¥–æ 30 000 ‚ÇΩ",
        term: "–¥–æ 30 –¥–Ω–µ–π",
        rate: "–æ—Ç 0%",
        url: "https://trk.ppdu.ru/click/HbPsDylQ?erid=LjN8KKm44&siteId=8015"
      };
    }

    return {
      mfo: "–¢—É—Ä–±–æ–∑–∞–π–º",
      logo: "üöÄ",
      reason: "–û—Ç–ª–∏—á–Ω—ã–π –±–∞–ª–∞–Ω—Å —É—Å–ª–æ–≤–∏–π! –ë–æ–ª—å—à–∏–µ —Å—É–º–º—ã –∏ –≥–∏–±–∫–∏–µ —Å—Ä–æ–∫–∏!",
      amount: "–¥–æ 100 000 ‚ÇΩ",
      term: "–¥–æ 168 –¥–Ω–µ–π",
      rate: "0%",
      url: "https://trk.ppdu.ru/click/kxajeYKr?erid=LjN8K737T&siteId=8015"
    };
  };

  const handleAnswer = (value: string) => {
    const newAnswers = { ...answers, [questions[step].id]: value };
    setAnswers(newAnswers);

    if (step < questions.length - 1) {
      setStep(step + 1);
    } else {
      const recommendation = getMFORecommendation();
      setResult(recommendation);
    }
  };

  const resetQuiz = () => {
    setStep(0);
    setAnswers({});
    setResult(null);
  };

  if (result) {
    return (
      <section className="py-20 bg-gradient-to-b from-secondary/5 to-background">
        <div className="container mx-auto px-4">
          <div className="max-w-2xl mx-auto">
            <Card className="p-8 bg-white shadow-2xl text-center">
              <div className="w-20 h-20 mx-auto mb-6 rounded-full bg-gradient-to-br from-green-400 to-emerald-500 flex items-center justify-center animate-bounce">
                <Icon name="CheckCircle2" size={40} className="text-white" />
              </div>

              <h3 className="text-3xl font-bold mb-4">–ú—ã –ø–æ–¥–æ–±—Ä–∞–ª–∏ –¥–ª—è –≤–∞—Å!</h3>
              
              <div className="my-8 p-6 bg-gradient-to-br from-primary/10 to-secondary/10 rounded-2xl">
                <div className="text-5xl mb-4">{result.logo}</div>
                <h4 className="text-2xl font-bold mb-2">{result.mfo}</h4>
                <p className="text-muted-foreground mb-4">{result.reason}</p>
                
                <div className="flex justify-center gap-4 flex-wrap mb-6">
                  <Badge variant="outline" className="text-sm py-2 px-4">
                    –°—É–º–º–∞: {result.amount}
                  </Badge>
                  <Badge variant="outline" className="text-sm py-2 px-4">
                    –°—Ä–æ–∫: {result.term}
                  </Badge>
                  <Badge variant="outline" className="text-sm py-2 px-4">
                    –°—Ç–∞–≤–∫–∞: {result.rate}
                  </Badge>
                </div>

                <Button 
                  size="lg" 
                  className="w-full bg-gradient-to-r from-primary to-secondary hover:opacity-90 text-lg h-14"
                  asChild
                >
                  <a 
                    href={result.url}
                    target="_blank"
                    rel="nofollow noopener noreferrer"
                  >
                    –ü–æ–ª—É—á–∏—Ç—å –∑–∞–π–º –≤ {result.mfo}
                    <Icon name="ArrowRight" size={20} className="ml-2" />
                  </a>
                </Button>
              </div>

              <Button 
                variant="outline" 
                onClick={resetQuiz}
                className="w-full"
              >
                <Icon name="RotateCcw" size={18} className="mr-2" />
                –ü—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å –∑–∞–Ω–æ–≤–æ
              </Button>
            </Card>
          </div>
        </div>
      </section>
    );
  }

  const currentQuestion = questions[step];
  const progress = ((step + 1) / questions.length) * 100;

  return (
    <section className="py-20 bg-gradient-to-b from-secondary/5 to-background">
      <div className="container mx-auto px-4">
        <div className="max-w-2xl mx-auto">
          <div className="text-center mb-8">
            <Badge className="mb-4 bg-gradient-to-r from-primary to-secondary text-white">
              –ü–æ–¥–±–æ—Ä –∑–∞ 30 —Å–µ–∫—É–Ω–¥
            </Badge>
            <h2 className="text-3xl md:text-4xl font-bold mb-4">
              –ù–∞–π–¥–µ–º –∏–¥–µ–∞–ª—å–Ω—ã–π –∑–∞–π–º –¥–ª—è –≤–∞—Å
            </h2>
            <p className="text-muted-foreground">
              –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ {questions.length} –ø—Ä–æ—Å—Ç—ã—Ö –≤–æ–ø—Ä–æ—Å–∞
            </p>
          </div>

          <div className="mb-6">
            <div className="flex justify-between text-sm text-muted-foreground mb-2">
              <span>–í–æ–ø—Ä–æ—Å {step + 1} –∏–∑ {questions.length}</span>
              <span>{Math.round(progress)}%</span>
            </div>
            <div className="h-2 bg-gray-200 rounded-full overflow-hidden">
              <div 
                className="h-full bg-gradient-to-r from-primary to-secondary transition-all duration-500"
                style={{ width: `${progress}%` }}
              />
            </div>
          </div>

          <Card className="p-8 bg-white shadow-2xl">
            <div className="flex items-center gap-3 mb-6">
              <div className="w-12 h-12 rounded-full bg-gradient-to-br from-primary/20 to-secondary/20 flex items-center justify-center">
                <Icon name={currentQuestion.icon as any} size={24} className="text-primary" />
              </div>
              <h3 className="text-2xl font-bold">{currentQuestion.question}</h3>
            </div>

            <div className="space-y-3">
              {currentQuestion.options.map((option) => (
                <button
                  key={option.value}
                  onClick={() => handleAnswer(option.value)}
                  className="w-full p-6 text-left border-2 border-gray-200 rounded-xl hover:border-primary hover:bg-primary/5 transition-all duration-300 hover:shadow-lg group"
                >
                  <div className="flex items-center gap-4">
                    <div className="text-3xl">{option.icon}</div>
                    <span className="text-lg font-semibold group-hover:text-primary transition-colors">
                      {option.label}
                    </span>
                    <Icon 
                      name="ChevronRight" 
                      size={20} 
                      className="ml-auto text-gray-400 group-hover:text-primary group-hover:translate-x-1 transition-all" 
                    />
                  </div>
                </button>
              ))}
            </div>

            {step > 0 && (
              <Button 
                variant="ghost" 
                onClick={() => setStep(step - 1)}
                className="w-full mt-6"
              >
                <Icon name="ChevronLeft" size={18} className="mr-2" />
                –ù–∞–∑–∞–¥
              </Button>
            )}
          </Card>
        </div>
      </div>
    </section>
  );
};

export default LoanQuiz;
